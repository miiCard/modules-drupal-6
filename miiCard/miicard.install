<?php

/**
 * @file
 * Install, update and uninstall functions for the miiCard module.
 */

/**
 * Implements hook_requirements()
 */
function miicard_requirements($phase) {
  $requirements = array();

  $t = get_t();

  if ($phase == 'runtime') {
    if (!variable_get('miicard_consumer_key', FALSE) || !variable_get('miicard_consumer_secret', FALSE)) {
      $requirements['miicard_conf'] = array(
        'title' => $t('miiCard'),
        'value' => $t('Not configured'),
        'severity' => REQUIREMENT_WARNING,
        'description' => $t('Consumer key and secret must be provided. !link', array('!link' => l($t('Settings page'), 'admin/settings/miicard'))),
      );
    }
  }

  return $requirements;
}

/**
 * Implements hook_install()
 */
function miicard_install() {
  drupal_install_schema('miicard');
}

/**
 * Implements hook_uninstall()
 */
function miicard_uninstall() {
  variable_del('miicard_consumer_key');
  variable_del('miicard_consumer_secret');
  variable_del('miicard_oauth');
  variable_del('miicard_api');
  variable_del('miicard_refresh_period');
  variable_del('miicard_in_batch');
  variable_del('miicard_last_check');
  variable_del('miicard_add_link');
  variable_del('miicard_sign_in_link');
  variable_del('miicard_user_fields');
  variable_del('miicard_profile_fields');
  variable_del('miicard_remove_link');
  
  drupal_uninstall_schema('miicard');
}

/**
 * Implements hook_schema()
 */
function miicard_schema() {
  $schema['miicard'] = array(
    'description' => "Local cache of miiCard data",
    'fields' => array(
      'uid' => array(
        'description' => 'User ID foreign key: {users}.uid and primary key for the miiCard',
        'type' => 'int',
        'size' => 'big',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'access_token' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
        'serialize' => TRUE,
        'description' => "miiCard OAuth access token",
      ),
      'username' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'description' => "User's miiCard Username",
      ),
      'url' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
        'description' => "User's miiCard URL",
      ),
      'data' => array(
        'type' => 'blob',
        'not null' => FALSE,
        'size' => 'big',
        'serialize' => TRUE,
        'description' => 'A serialized array of the public miiCard fields.  Future versions should probably see this replaced with entity fields.',
      ),
      'refreshed' => array(
        'description' => 'The Unix timestamp when the miiCard was last refreshed.',
        'type' => 'int',
        'size' => 'big',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'indexes' => array(
      'miicard_refreshed' => array('refreshed'),
    ),
    'foreign keys' => array(
      'miicard_user' => array(
        'table' => 'users',
        'columns' => array('uid' => 'uid'),
      ),
    ),
    'primary key' => array('uid'),
  );
  
  return $schema;
}

function miicard_update_6002() {
  $ret = array();
  db_add_field($ret, 'miicard', 'username', 
    array(
      'type' => 'varchar',
      'length' => 255,
      'not null' => TRUE,
      'description' => "User's miiCard Username",
    )
  );
  return $ret;
}
