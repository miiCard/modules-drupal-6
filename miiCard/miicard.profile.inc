<?php 

/**
 * @file
 * Integration with the profile module
 */


/**
 * List of fields generated by profile module.
 */
function miicard_profile_fields() {
  static $profile_fields;

  if (!isset($profile_fields)) {
    $profile_fields = array();
    $profile_categories = profile_categories();
    foreach ($profile_categories as $profile_category) {
      $result = _profile_get_fields($profile_category['name']);
      while ($field = db_fetch_array($result)) {
        $profile_fields[$field['name']] = $field;
      }
    }
  }

  return $profile_fields;
}

function miicard_map_profile_form() {
  module_load_include('inc', 'miicard', 'miicard.fields');
  
  $form = array();
  $form['miicard_user_profile'] = array(
    '#type' => 'fieldset',
    '#title' => t('User profile mapping'),
    '#description' => t('Each of your profile fields are listed below. Select the miiCard data you want to import into each field.'),
    '#tree' => TRUE,
    '#weight' => 5,
  );

  // Each field type can only map to certain type Facebook properties. Build a
  // list for each type that includes reasonable options.
  $properties = miicard_mapping_options();
  $property_options = array();
  foreach ($properties as $property => $property_info) {
    if (isset($property_info['field_types'])) {
      foreach ($property_info['field_types'] as $field_type) {
        $property_options[$field_type][$property] = $property_info['label'];
      }
    }
  }

  $field_defaults = variable_get('miicard_user_profile', array());
  
  $profile_fields = miicard_profile_fields();
  foreach ($profile_fields as $profile_name => $profile_field) {
    if (isset($property_options[$profile_field['type']])) {
      $options = array_merge(array('' => t('- Do not import -')), $property_options[$profile_field['type']]);
      $form['miicard_user_profile'][$profile_name] = array(
        '#title' => t($profile_field['title']),
        '#type' => 'select',
        '#options' => $options,
        '#default_value' => isset($field_defaults[$profile_name]) ? $field_defaults[$profile_name] : '',
      );
    }
    else {
      $form['miicard_user_profile'][$profile_name] = array(
        '#title' => t($profile_field['title']),
        '#type' => 'form_element',
        '#children' => '<em>' . t('No mappable miiCard properties.') . '</em>',
        '#theme_wrappers' => array('form_element'),
      );
    }
  }
  
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Submit'),
    '#weight' => 100,
  );
  
  return $form;
}

/**
 * Submit handler for the map miicard fields form.
 */
function miicard_map_profile_form_submit(&$form, &$form_state) {
  if (isset($form_state['values']['miicard_user_profile'])) {
    variable_set('miicard_user_profile', array_filter($form_state['values']['miicard_user_profile']));
  }
  else {
    variable_set('miicard_user_profile', array());
  }
}

/**
 * Add field info to a Drupal user array ready to save
 */
function miicard_profile_create_user(&$edit, $miicard) {
  $profile_map = variable_get('miicard_user_profile', array());
  $profile_mapping_options = miicard_mapping_options();
  $profile_fields = miicard_profile_fields();
  foreach ($profile_map as $profile_field_name => $miicard_property_name) {
    if (isset($profile_fields[$profile_field_name])) {
      $profile_field = $profile_fields[$profile_field_name];
      if (isset($profile_map[$profile_field_name])) {
        $profile_mapping = $profile_mapping_options[$profile_map[$profile_field_name]];
        $callback = 'miicard_field_convert_' . $profile_mapping['conversion'];
        if ($value = $callback($profile_mapping['miicard'], $miicard, array(), array())) {
          $edit[$profile_field_name] = $value['value'];
        }
      }
    }
  }
}
